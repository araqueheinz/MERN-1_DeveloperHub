{"ast":null,"code":"var _jsxFileName = \"/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/dashboard/Dashboard.js\";\n// Import React Library and Fragment component\nimport React, { Fragment } from 'react'; // Import PropTypes from prop-types library\n\nimport PropTypes from 'prop-types'; // Import useEffect from React library HOOKS!\n\nimport { useEffect } from 'react'; // Import the connect function from react-redux library\n\nimport { connect } from 'react-redux'; // Import our Spinner component\n\nimport Spinner from '../layouts/Spinner'; // Import the link component from the react-router-dom\n\nimport { Link } from 'react-router-dom'; // Import our getCurrentProfile action\n\nimport { getCurrentProfile } from '../../actions/profile'; // Import our DashboardAction component\n\nimport DashboardActions from './DashboardActions'; // Import our Experience component\n\nimport Experience from './Experience'; // Import our Education component\n\nimport Education from './Education';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  return loading && profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), \" Bienvenid@ \", user && user.name), profile !== null ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(DashboardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Experience, {\n    experience: profile.experience,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Education, {\n    education: profile.education,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteAccount(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user-minus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \" Delete My Account\"))) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"You haven't created a profile, an account yes, a profile no, please add info\"), React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Create Profile\")));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile: getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","PropTypes","useEffect","connect","Spinner","Link","getCurrentProfile","DashboardActions","Experience","Education","Dashboard","auth","user","profile","loading","name","experience","education","deleteAccount","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["// Import React Library and Fragment component\nimport React, { Fragment } from 'react';\n\n// Import PropTypes from prop-types library\nimport PropTypes from 'prop-types'\n\n// Import useEffect from React library HOOKS!\nimport { useEffect } from 'react';\n\n// Import the connect function from react-redux library\nimport { connect } from 'react-redux';\n\n// Import our Spinner component\nimport Spinner from '../layouts/Spinner';\n\n// Import the link component from the react-router-dom\nimport { Link } from 'react-router-dom';\n\n// Import our getCurrentProfile action\nimport { getCurrentProfile } from '../../actions/profile';\n\n// Import our DashboardAction component\nimport DashboardActions from './DashboardActions';\n\n// Import our Experience component\nimport Experience from './Experience';\n\n\n// Import our Education component\nimport Education from './Education';\n\nconst Dashboard = ({ getCurrentProfile, auth: { user }, profile: { profile, loading } }) => {\n\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  return loading && profile === null ?  <Spinner /> : <Fragment>\n    <h1 className='large text-primary'>Dashboard</h1>\n\n    <p className='lead'>\n                     {/* If user exists then show user.name */}\n      <i className='fas fa-user' /> Bienvenid@ {user && user.name}\n    </p>\n\n    { profile !== null ? <Fragment>\n\n      <DashboardActions />\n      <Experience experience={profile.experience}/>\n      <Education education={profile.education}/>\n      <div className='my-2'>\n        <button className='btn btn-danger' onClick={() => deleteAccount()}>\n          <i className='fas fa-user-minus' /> Delete My Account\n        </button>\n      </div>\n\n      \n    </Fragment> : <Fragment>\n        <p>You haven't created a profile, an account yes, a profile no, please add info</p>\n        <Link to='/create-profile' className=\"btn btn-primary my-1\">\n          Create Profile\n        </Link>\n      </Fragment>}\n  </Fragment>\n}\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile: getCurrentProfile,\n})(Dashboard);\n"]},"metadata":{},"sourceType":"module"}