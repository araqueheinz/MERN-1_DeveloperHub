{"ast":null,"code":"// Import axios library\nimport axios from 'axios'; // Import our setAlert action\n\nimport { setAlert } from './alert'; // Import our action types\n\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from './types'; // Import our setAuthToken utils\n\nimport setAuthToken from '../utils/setAuthToken'; // LOAD USER\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {}\n}; // REGISTER USER\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const body = {\n    name,\n    email,\n    password\n  };\n\n  try {\n    // Save to the database\n    const res = await axios.post('/api/users', body, {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(element => dispatch(setAlert(element.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAuthToken","loadUser","dispatch","localStorage","token","register","name","email","password","body","res","post","headers","type","payload","data","error","errors","response","forEach","element","msg"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,SAAzB,C,CAEA;;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,WAA1C,EAAuDC,UAAvD,QAA0E,SAA1E,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,MAAIC,YAAY,CAACC,KAAjB,EAAwB,CAEvB;AACF,CAJM,C,CAMP;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMN,QAAN,IAAkB;AACvE,QAAMO,IAAI,GAAG;AACXH,IAAAA,IADW;AAEXC,IAAAA,KAFW;AAGXC,IAAAA;AAHW,GAAb;;AAMA,MAAI;AACF;AACA,UAAME,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,YAAX,EAAyBF,IAAzB,EAA+B;AAAEG,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAAX,KAA/B,CAAlB;AAEAV,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEjB,gBADC;AAEPkB,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,KAAD,CAAR;AAID,GARD,CAQE,OAAOC,KAAP,EAAc;AAEd,UAAMC,MAAM,GAAGD,KAAK,CAACE,QAAN,CAAeH,IAAf,CAAoBE,MAAnC;;AACA,QAAGA,MAAH,EAAW;AACTA,MAAAA,MAAM,CAACE,OAAP,CAAeC,OAAO,IAAIlB,QAAQ,CAACP,QAAQ,CAACyB,OAAO,CAACC,GAAT,EAAc,QAAd,CAAT,CAAlC;AACD;;AAEDnB,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEhB;AADC,KAAD,CAAR;AAGD;AACF,CA1BM","sourcesContent":["// Import axios library\nimport axios from 'axios';\n\n// Import our setAlert action\nimport { setAlert } from './alert';\n\n// Import our action types\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR  } from './types';\n\n// Import our setAuthToken utils\nimport setAuthToken from '../utils/setAuthToken';\n\n// LOAD USER\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n\n  }\n}\n\n// REGISTER USER\nexport const register = ({ name, email, password }) => async dispatch => {\n  const body = {\n    name,\n    email,\n    password,\n  }\n\n  try {\n    // Save to the database\n    const res = await axios.post('/api/users', body, { headers: { 'Content-type': 'application/json' }});\n    \n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n  } catch (error) {\n\n    const errors = error.response.data.errors;\n    if(errors) {\n      errors.forEach(element => dispatch(setAlert(element.msg, 'danger')));\n    } \n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}