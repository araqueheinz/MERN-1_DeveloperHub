{"ast":null,"code":"var _jsxFileName = \"/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/post/CommentItem.js\";\n// Import React Library\nimport React from 'react'; // Import PropTypes from prop-types library\n\nimport PropTypes from 'prop-types'; // Import the connect function from react-redux library\n\nimport { connect } from 'react-redux'; // Import the link component from the react-router-dom\n\nimport { Link } from 'react-router-dom'; // Import our deleteComment action creator\n\nimport { deleteComment } from '../../actions/post'; // Import the React Moment library\n\nimport Moment from 'react-moment';\n\nconst CommentItem = ({\n  postId,\n  comment: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    date\n  },\n  auth,\n  deleteComment\n}) => React.createElement(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/profile/\".concat(user),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  className: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, name))), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  className: \"my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, text), React.createElement(\"p\", {\n  className: \"post-date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, \"Posted on \", React.createElement(Moment, {\n  format: \"YYYY/MM/DD\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, date)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n  onClick: () => deleteComment(postId, _id),\n  type: \"button\",\n  className: \"btn btn-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-times\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}))));\n\nCommentItem.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  deleteComment: PropTypes.func.isRequired,\n  auth: state.auth,\n  comment: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired\n});\n\nexport default connect(mapStateToProps, {\n  deleteComment: deleteComment\n})(CommentItem);","map":{"version":3,"sources":["/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/post/CommentItem.js"],"names":["React","PropTypes","connect","Link","deleteComment","Moment","CommentItem","postId","comment","_id","text","name","avatar","user","date","auth","loading","propTypes","object","isRequired","mapStateToProps","state","func","string"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,oBAA9B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAGA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,MADmB;AAEnBC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA,IAA3B;AAAiCC,IAAAA;AAAjC,GAFU;AAGnBC,EAAAA,IAHmB;AAInBX,EAAAA;AAJmB,CAAD,KAMlB;AAAK,EAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,EAAE,qBAAcS,IAAd,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,WAAf;AAA2B,EAAA,GAAG,EAAED,MAAhC;AAAwC,EAAA,GAAG,EAAC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKD,IAAL,CAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAqBD,IAArB,CADF,EAEE;AAAG,EAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACY,oBAAC,MAAD;AAAQ,EAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA6BI,IAA7B,CADZ,CAFF,EAKG,CAACC,IAAI,CAACC,OAAN,IAAiBH,IAAI,KAAKE,IAAI,CAACF,IAAL,CAAUJ,GAApC,IACC;AACE,EAAA,OAAO,EAAE,MAAML,aAAa,CAACG,MAAD,EAASE,GAAT,CAD9B;AAEE,EAAA,IAAI,EAAC,QAFP;AAGE,EAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKE;AAAG,EAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,CANJ,CAPF,CANF;;AAgCAH,WAAW,CAACW,SAAZ,GAAwB;AACtBF,EAAAA,IAAI,EAAEd,SAAS,CAACiB,MAAV,CAAiBC;AADD,CAAxB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCjB,EAAAA,aAAa,EAAEH,SAAS,CAACqB,IAAV,CAAeH,UADI;AAElCJ,EAAAA,IAAI,EAAEM,KAAK,CAACN,IAFsB;AAGlCP,EAAAA,OAAO,EAAEP,SAAS,CAACiB,MAAV,CAAiBC,UAHQ;AAIlCZ,EAAAA,MAAM,EAAEN,SAAS,CAACsB,MAAV,CAAiBJ;AAJS,CAAZ,CAAxB;;AAOA,eAAejB,OAAO,CAACkB,eAAD,EAAkB;AACtChB,EAAAA,aAAa,EAAEA;AADuB,CAAlB,CAAP,CAEZE,WAFY,CAAf","sourcesContent":["// Import React Library\nimport React from 'react';\n\n// Import PropTypes from prop-types library\nimport PropTypes from 'prop-types';\n\n// Import the connect function from react-redux library\nimport { connect } from 'react-redux';\n\n// Import the link component from the react-router-dom\nimport { Link } from 'react-router-dom';\n\n// Import our deleteComment action creator\nimport { deleteComment } from '../../actions/post';\n\n// Import the React Moment library\nimport Moment from 'react-moment';\n\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment\n}) => (\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='my-1'>{text}</p>\n      <p className='post-date'>\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n      </p>\n      {!auth.loading && user === auth.user._id && (\n        <button\n          onClick={() => deleteComment(postId, _id)}\n          type='button'\n          className='btn btn-danger'\n        >\n          <i className='fas fa-times' />\n        </button>\n      )}\n    </div>\n  </div>\n);\n\n\nCommentItem.propTypes = {\n  auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  deleteComment: PropTypes.func.isRequired,\n  auth: state.auth,\n  comment: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired,\n})\n\nexport default connect(mapStateToProps, {\n  deleteComment: deleteComment,\n})(CommentItem)\n"]},"metadata":{},"sourceType":"module"}