{"ast":null,"code":"var _jsxFileName = \"/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/profile/ProfileGithub.js\";\n// Import React Library\nimport React from 'react'; // Import PropTypes from prop-types library\n\nimport PropTypes from 'prop-types'; // Import useEffect from React library HOOKS!\n\nimport { useEffect } from 'react'; // Import the connect function from react-redux library\n\nimport { connect } from 'react-redux'; // Import our Spinner component\n\nimport Spinner from '../layouts/Spinner'; // Import our getGithubRepos action creator\n\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n  return React.createElement(\"div\", {\n    className: \"profile-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos: getGithubRepos\n})(ProfileGithub);","map":{"version":3,"sources":["/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/profile/ProfileGithub.js"],"names":["React","PropTypes","useEffect","connect","Spinner","getGithubRepos","ProfileGithub","username","repos","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAEA;;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYF,EAAAA,cAAZ;AAA4BG,EAAAA;AAA5B,CAAD,KAAyC;AAE7DN,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,cAAc,CAACE,QAAD,CAAd;AACD,GAFQ,EAEN,CAACF,cAAD,CAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CAXD;;AAaAC,aAAa,CAACG,SAAd,GAA0B;AACxBJ,EAAAA,cAAc,EAAEJ,SAAS,CAACS,IAAV,CAAeC,UADP;AAExBH,EAAAA,KAAK,EAAEP,SAAS,CAACW,KAAV,CAAgBD,UAFC;AAGxBJ,EAAAA,QAAQ,EAAEN,SAAS,CAACY,MAAV,CAAiBF;AAHH,CAA1B;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCP,EAAAA,KAAK,EAAEO,KAAK,CAACC,OAAN,CAAcR;AADW,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACW,eAAD,EAAkB;AACxCT,EAAAA,cAAc,EAAEA;AADwB,CAAlB,CAAP,CAEZC,aAFY,CAAf","sourcesContent":["// Import React Library\nimport React from 'react'\n\n// Import PropTypes from prop-types library\nimport PropTypes from 'prop-types'\n\n// Import useEffect from React library HOOKS!\nimport { useEffect } from 'react';\n\n// Import the connect function from react-redux library\nimport { connect } from 'react-redux';\n\n// Import our Spinner component\nimport Spinner from '../layouts/Spinner';\n\n// Import our getGithubRepos action creator\nimport { getGithubRepos } from '../../actions/profile';\n\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n\n  return (\n    <div className='profile-github'>\n\n    </div>\n  )\n}\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos,\n});\n\nexport default connect(mapStateToProps, { \ngetGithubRepos: getGithubRepos,\n})(ProfileGithub);\n"]},"metadata":{},"sourceType":"module"}