{"ast":null,"code":"var _jsxFileName = \"/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/post/CommentItem.js\";\n// Import React Library\nimport React from 'react'; // Import PropTypes from prop-types library\n\nimport PropTypes from 'prop-types'; // Import the connect function from react-redux library\n\nimport { connect } from 'react-redux'; // Import the link component from the react-router-dom\n\nimport { Link } from 'react-router-dom'; // Import our deleteComment action creator\n\nimport { deleteComment } from '../../actions/post'; // Import the React Moment library\n\nimport Moment from 'react-moment';\n\nconst CommentItem = ({\n  postId,\n  comment: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    date\n  },\n  auth,\n  deleteComment\n}) => {\n  console.log(\"postId: \".concat(postId, \", name: \").concat(name));\n  return React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profile/\".concat(user),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, text), React.createElement(\"p\", {\n    className: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Posted on \", React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, date)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: () => deleteComment(postId, _id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))));\n};\n\nCommentItem.propTypes = {\n  auth: PropTypes.object.isRequired,\n  comment: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deleteComment: deleteComment\n})(CommentItem);","map":{"version":3,"sources":["/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/post/CommentItem.js"],"names":["React","PropTypes","connect","Link","deleteComment","Moment","CommentItem","postId","comment","_id","text","name","avatar","user","date","auth","console","log","loading","propTypes","object","isRequired","string","func","mapStateToProps","state"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,oBAA9B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAGC,EAAAA,MAAH;AAAWC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA,IAA3B;AAAiCC,IAAAA;AAAjC,GAApB;AAA6DC,EAAAA,IAA7D;AAAmEX,EAAAA;AAAnE,CAAD,KAAwF;AAC1GY,EAAAA,OAAO,CAACC,GAAR,mBAAuBV,MAAvB,qBAAwCI,IAAxC;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,qBAAcE,IAAd,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAED,MAAhC;AAAwC,IAAA,GAAG,EAAC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAL,CAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,IAArB,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACY,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BI,IAA7B,CADZ,CAFF,EAKG,CAACC,IAAI,CAACG,OAAN,IAAiBL,IAAI,KAAKE,IAAI,CAACF,IAAL,CAAUJ,GAApC,IACC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAiD,IAAA,OAAO,EAAE,MAAML,aAAa,CAACG,MAAD,EAASE,GAAT,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANJ,CAPF,CADF;AAqBD,CAxBD;;AA0BAH,WAAW,CAACa,SAAZ,GAAwB;AACtBJ,EAAAA,IAAI,EAAEd,SAAS,CAACmB,MAAV,CAAiBC,UADD;AAEtBb,EAAAA,OAAO,EAAEP,SAAS,CAACmB,MAAV,CAAiBC,UAFJ;AAGtBd,EAAAA,MAAM,EAAEN,SAAS,CAACqB,MAAV,CAAiBD,UAHH;AAItBjB,EAAAA,aAAa,EAAEH,SAAS,CAACsB,IAAV,CAAeF;AAJR,CAAxB;;AAOA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADsB,CAAZ,CAAxB;;AAIA,eAAeb,OAAO,CAACsB,eAAD,EAAkB;AACtCpB,EAAAA,aAAa,EAAEA;AADuB,CAAlB,CAAP,CAEZE,WAFY,CAAf","sourcesContent":["// Import React Library\nimport React from 'react';\n\n// Import PropTypes from prop-types library\nimport PropTypes from 'prop-types';\n\n// Import the connect function from react-redux library\nimport { connect } from 'react-redux';\n\n// Import the link component from the react-router-dom\nimport { Link } from 'react-router-dom';\n\n// Import our deleteComment action creator\nimport { deleteComment } from '../../actions/post';\n\n// Import the React Moment library\nimport Moment from 'react-moment';\n\n\nconst CommentItem = ({  postId, comment: { _id, text, name, avatar, user, date }, auth, deleteComment }) => {\n  console.log(`postId: ${postId}, name: ${name}`)\n\n  return (\n    <div className='post bg-white p-1 my-1'>\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className='round-img' src={avatar} alt='' />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className='my-1'>{text}</p>\n        <p className='post-date'>\n          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n        </p>\n        {!auth.loading && user === auth.user._id && (\n          <button type='button' className='btn btn-danger' onClick={() => deleteComment(postId, _id)}>\n            <i className='fas fa-times' />\n          </button>\n        )}\n      </div>\n    </div>\n  )\n}\n\nCommentItem.propTypes = {\n  auth: PropTypes.object.isRequired,\n  comment: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n})\n\nexport default connect(mapStateToProps, {\n  deleteComment: deleteComment,\n})(CommentItem)\n"]},"metadata":{},"sourceType":"module"}