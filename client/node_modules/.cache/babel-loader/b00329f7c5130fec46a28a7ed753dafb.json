{"ast":null,"code":"var _jsxFileName = \"/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/routing/PrivateRouting.js\";\n// Import React library\nimport React from 'react'; // Import the Route, and Redirect components from 'react-router-dom library\n\nimport { Route, Redirect } from 'react-router-dom'; // Import PropTypes from prop-types library\n\nimport PropTypes from 'prop-types'; // Import the connect function from react-redux library\n\nimport { connect } from 'react-redux';\n\nconst PrivateRouting = ({\n  component: Component,\n  auth: {\n    isAuthenticated,\n    loading\n  }\n}) => {\n  React.createElement(Route, Object.assign({}, res, {\n    render: props => {\n      !auth.isAuthenticated && !loading ? React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }) : React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n};\n\nPrivateRouting.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRouting);","map":{"version":3,"sources":["/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/routing/PrivateRouting.js"],"names":["React","Route","Redirect","PropTypes","connect","PrivateRouting","component","Component","auth","isAuthenticated","loading","res","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB;AAA9B,CAAD,KAAkE;AACvF,sBAAC,KAAD,oBAAWC,GAAX;AAAgB,IAAA,MAAM,EAAGC,KAAK,IAAI;AAEhC,OAACJ,IAAI,CAACC,eAAN,IAAyB,CAACC,OAA1B,GAAqC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArC,GAAkE,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAlE;AAED,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKD,CAND;;AAQAP,cAAc,CAACQ,SAAf,GAA2B;AACzBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBC;AADE,CAA3B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADsB,CAAZ,CAAxB;;AAIA,eAAeJ,OAAO,CAACY,eAAD,CAAP,CAAyBX,cAAzB,CAAf","sourcesContent":["// Import React library\nimport React from 'react';\n\n// Import the Route, and Redirect components from 'react-router-dom library\nimport { Route, Redirect } from 'react-router-dom';\n\n// Import PropTypes from prop-types library\nimport PropTypes from 'prop-types'\n\n// Import the connect function from react-redux library\nimport { connect } from 'react-redux';\n\nconst PrivateRouting = ({ component: Component, auth: { isAuthenticated, loading } }) => {\n  <Route {...res} render={ props => { \n    \n    !auth.isAuthenticated && !loading ? (<Redirect to='/login' />) : (<Component {...props} />)\n\n  }} />\n}\n\nPrivateRouting.propTypes = {\n  auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRouting)\n"]},"metadata":{},"sourceType":"module"}