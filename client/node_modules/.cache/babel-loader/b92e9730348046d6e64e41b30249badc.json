{"ast":null,"code":"var _jsxFileName = \"/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/posts/PostItem.js\";\n// Import React Library and Fragment component\nimport React, { Fragment } from 'react'; // Import the connect function from react-redux library\n\nimport { connect } from 'react-redux'; // Import PropTypes from prop-types library\n\nimport PropTypes from 'prop-types'; // Import the link component from the react-router-dom\n\nimport { Link } from 'react-router-dom'; // Import the moment library\n\nimport moment from 'moment'; // Import the React Moment library\n\nimport Moment from 'react-moment'; // Import our addLike action creator\n\nimport { addLike } from '../../actions/post'; // Import our removeLike action creator\n\nimport { removeLike } from '../../actions/post';\n\nconst PostItem = ({\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  addLike,\n  removeLike\n}) => {\n  return React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profile/\".concat(user),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, text), React.createElement(\"p\", {\n    className: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" Posted on \", React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, date), \" \")), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    onClick: event => {\n      addLike(_id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), ' ', React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, likes.length > 0 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, likes.length))), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    onClick: event => {\n      removeLike(_id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-thumbs-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/post/\".concat(_id),\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Discussion\", ' ', \" \", comments.length > 0 && React.createElement(\"span\", {\n    className: \"comment-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, comments.length)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n};\n\nPostItem.propTypes = {\n  auth: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired\n});\n\nexport default connect(mapStateToProps, {\n  addLike: addLike,\n  removeLike: removeLike\n})(PostItem);","map":{"version":3,"sources":["/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/posts/PostItem.js"],"names":["React","Fragment","connect","PropTypes","Link","moment","Moment","addLike","removeLike","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","event","length","loading","propTypes","object","isRequired","mapStateToProps","state","func"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,oBAAxB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAI,EAAE;AAAGC,IAAAA,GAAH;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA,MAAtB;AAA8BC,IAAAA,IAA9B;AAAoCC,IAAAA,KAApC;AAA2CC,IAAAA,QAA3C;AAAqDC,IAAAA;AAArD,GAAd;AAA4EZ,EAAAA,OAA5E;AAAqFC,EAAAA;AAArF,CAAD,KAAwG;AACvH,SACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,qBAAcQ,IAAd,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAED,MAAhC;AAAwC,IAAA,GAAG,EAAC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAL,CAFF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,IAArB,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoC,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BM,IAA7B,CAApC,MAFF,CARF,EAcE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,eAAhC;AAAgD,IAAA,OAAO,EAAGC,KAAD,IAAW;AAAEb,MAAAA,OAAO,CAACK,GAAD,CAAP;AAAc,KAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EACqC,GADrC,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOK,KAAK,CAACI,MAAN,GAAe,CAAf,IAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,KAAK,CAACI,MAAb,CAA3B,CAFF,CAdF,EAoBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,eAAhC;AAAgD,IAAA,OAAO,EAAGD,KAAD,IAAW;AAAEZ,MAAAA,UAAU,CAACI,GAAD,CAAV;AAAiB,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApBF,EAwBE,oBAAC,IAAD;AAAM,IAAA,EAAE,kBAAWA,GAAX,CAAR;AAA0B,IAAA,SAAS,EAAC,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACa,GADb,OACmBM,QAAQ,CAACG,MAAT,GAAkB,CAAlB,IAAyB;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCH,QAAQ,CAACG,MAA1C,CAD5C,CAxBF,EA4BG,CAACX,IAAI,CAACY,OAAN,IAAiBN,IAAI,KAAKN,IAAI,CAACM,IAAL,CAAUJ,GAApC,IACC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA7BJ,CADF;AAoCD,CArCD;;AAuCAH,QAAQ,CAACc,SAAT,GAAqB;AACnBb,EAAAA,IAAI,EAAEP,SAAS,CAACqB,MAAV,CAAiBC,UADJ;AAEnBd,EAAAA,IAAI,EAAER,SAAS,CAACqB,MAAV,CAAiBC;AAFJ,CAArB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCjB,EAAAA,IAAI,EAAEiB,KAAK,CAACjB,IADsB;AAElCH,EAAAA,OAAO,EAAEJ,SAAS,CAACyB,IAAV,CAAeH,UAFU;AAGlCjB,EAAAA,UAAU,EAAEL,SAAS,CAACyB,IAAV,CAAeH;AAHO,CAAZ,CAAxB;;AAMA,eAAevB,OAAO,CAACwB,eAAD,EAAkB;AACtCnB,EAAAA,OAAO,EAAEA,OAD6B;AAEtCC,EAAAA,UAAU,EAAEA;AAF0B,CAAlB,CAAP,CAGZC,QAHY,CAAf","sourcesContent":["// Import React Library and Fragment component\nimport React, { Fragment } from 'react';\n\n// Import the connect function from react-redux library\nimport { connect } from 'react-redux';\n\n// Import PropTypes from prop-types library\nimport PropTypes from 'prop-types';\n\n// Import the link component from the react-router-dom\nimport { Link } from 'react-router-dom';\n\n// Import the moment library\nimport moment from 'moment';\n\n// Import the React Moment library\nimport Moment from 'react-moment';\n\n// Import our addLike action creator\nimport { addLike } from '../../actions/post';\n\n// Import our removeLike action creator\nimport { removeLike } from '../../actions/post';\n\n\nconst PostItem = ({ auth, post: {  _id  , text, name, avatar, user, likes, comments, date, }, addLike, removeLike, }) => {\n  return (\n    <div className='post bg-white p-1 my-1'>\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className='round-img' src={avatar} alt='' />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n\n      <div>\n        <p className='my-1'>{text}</p>\n        <p className='post-date'> Posted on <Moment format='YYYY/MM/DD'>{date}</Moment> </p>\n      </div>\n\n      {/* LIKE BUTTON */}\n      <button type='button' className='btn btn-light' onClick={(event) => { addLike(_id) }}>\n        <i className='fas fa-thumbs-up' />{' '}\n        <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n      </button>\n\n      {/* UNLIKE BUTTON */}\n      <button type='button' className='btn btn-light' onClick={(event) => { removeLike(_id) }} >\n        <i className='fas fa-thumbs-down' />\n      </button>\n\n      <Link to={`/post/${_id}`} className='btn btn-primary'>\n        Discussion{' '} {comments.length > 0 && ( <span className='comment-count'>{comments.length}</span> )}\n      </Link>\n\n      {!auth.loading && user === auth.user._id && (\n        <button type='button' className='btn btn-danger'>\n          <i className='fas fa-times' />\n        </button>\n      )}\n  </div>\n  )\n}\n\nPostItem.propTypes = {\n  auth: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n})\n\nexport default connect(mapStateToProps, {\n  addLike: addLike,\n  removeLike: removeLike,\n})(PostItem)\n"]},"metadata":{},"sourceType":"module"}