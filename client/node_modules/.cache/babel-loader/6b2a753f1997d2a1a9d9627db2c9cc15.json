{"ast":null,"code":"import _defineProperty from \"/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Import our action types\nimport { GET_PROFILE, GET_PROFILES, GET_REPOS, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE } from '../actions/types'; // Using a Switch Statement Most common practice\n\nexport default ((state = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {}\n}, action) => {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return _objectSpread({}, state, {\n        profile: payload,\n        loading: false\n      });\n\n    case GET_PROFILES:\n      return _objectSpread({}, state, {\n        profiles: payload,\n        loading: false\n      });\n\n    case PROFILE_ERROR:\n      return _objectSpread({}, state, {\n        error: payload,\n        loading: false\n      });\n\n    case CLEAR_PROFILE:\n      return _objectSpread({}, state, {\n        profile: null,\n        repos: [],\n        loading: false\n      });\n\n    case GET_REPOS:\n      return _objectSpread({}, state, {\n        repos: payload,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/reducers/profile.js"],"names":["GET_PROFILE","GET_PROFILES","GET_REPOS","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","state","profile","profiles","repos","loading","error","action","type","payload"],"mappings":";;;;;;AAAA;AACA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,SAApC,EAA+CC,aAA/C,EAA8DC,cAA9D,EAA8EC,aAA9E,QAAmG,kBAAnG,C,CAEA;;AACA,gBAAe,CAACC,KAAK,GAAG;AACtBC,EAAAA,OAAO,EAAE,IADa;AAEtBC,EAAAA,QAAQ,EAAE,EAFY;AAGtBC,EAAAA,KAAK,EAAE,EAHe;AAItBC,EAAAA,OAAO,EAAE,IAJa;AAKtBC,EAAAA,KAAK,EAAE;AALe,CAAT,EAMZC,MANY,KAMD;AAAA,QAEJC,IAFI,GAEeD,MAFf,CAEJC,IAFI;AAAA,QAEEC,OAFF,GAEeF,MAFf,CAEEE,OAFF;;AAIZ,UAAQD,IAAR;AACE,SAAKb,WAAL;AACA,SAAKI,cAAL;AACE,+BACKE,KADL;AAEEC,QAAAA,OAAO,EAAEO,OAFX;AAGEJ,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKT,YAAL;AACE,+BACKK,KADL;AAEEE,QAAAA,QAAQ,EAAEM,OAFZ;AAGEJ,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKP,aAAL;AACE,+BACKG,KADL;AAEEK,QAAAA,KAAK,EAAEG,OAFT;AAGEJ,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKL,aAAL;AACE,+BACKC,KADL;AAEEC,QAAAA,OAAO,EAAE,IAFX;AAGEE,QAAAA,KAAK,EAAE,EAHT;AAIEC,QAAAA,OAAO,EAAE;AAJX;;AAOF,SAAKR,SAAL;AACE,+BACKI,KADL;AAEEG,QAAAA,KAAK,EAAEK,OAFT;AAGEJ,QAAAA,OAAO,EAAE;AAHX;;AAKF;AACE,aAAOJ,KAAP;AAtCJ;AAyCD,CAnDD","sourcesContent":["// Import our action types\nimport { GET_PROFILE, GET_PROFILES, GET_REPOS, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE } from '../actions/types';\n\n// Using a Switch Statement Most common practice\nexport default (state = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {},\n}, action) => {\n\n  const { type, payload } =  action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false\n      };\n    \n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n      }\n\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    \n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false,\n      }\n    \n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false,\n      }\n    default:\n      return state;\n  }\n\n};"]},"metadata":{},"sourceType":"module"}