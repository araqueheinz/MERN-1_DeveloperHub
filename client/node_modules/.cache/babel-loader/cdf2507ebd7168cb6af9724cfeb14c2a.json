{"ast":null,"code":"var _jsxFileName = \"/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/profile/Profile.js\";\n// Import React Library and Fragment component\nimport React, { Fragment } from 'react'; // Import the connect function from react-redux library\n\nimport { connect } from 'react-redux'; // Import our Spinner component\n\nimport Spinner from '../layouts/Spinner'; // Import PropTypes from prop-types library\n\nimport PropTypes from 'prop-types'; // Import the link component from the react-router-dom\n\nimport { Link } from 'react-router-dom'; // Import useEffect from React library HOOKS!\n\nimport { useEffect } from 'react'; // Import our getProfileById action creator\n\nimport { getProfileById } from '../../actions/profile'; // Import our ProfileTop component\n\nimport ProfileTop from './ProfileTop'; // Import our ProfileAbout component\n\nimport ProfileAbout from './ProfileAbout'; // Import our ProfileExperience component\n\nimport ProfileExperience from './ProfileExperience'; // Import our ProfileEducation component\n\nimport ProfileEducation from './ProfileEducation'; // Import our ProfileGithub component\n\nimport ProfileGithub from './ProfileGithub';\n\nconst Profile = ({\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match,\n  getProfileById\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Back To Profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Edit Profile\"), React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(ProfileTop, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(ProfileAbout, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Experience\"), profile.experience.length > 0 ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, profile.experience.map(experience => React.createElement(ProfileExperience, {\n    key: experience._id,\n    experience: experience,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"No experience credentials\")), React.createElement(\"div\", {\n    className: \"profile-edu bg-white p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Education\"), profile.education.length > 0 ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, profile.education.map(education => React.createElement(ProfileEducation, {\n    key: education._id,\n    education: education,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"No education credentials\")), profile.githubusername && React.createElement(ProfileGithub, {\n    username: profile.githubusername,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }))));\n};\n\nProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  getProfileById: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById: getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/profile/Profile.js"],"names":["React","Fragment","connect","Spinner","PropTypes","Link","useEffect","getProfileById","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","education","githubusername","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CAEA;;AACA,SAASC,cAAT,QAA+B,uBAA/B,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAX;AAAiCC,EAAAA,IAAjC;AAAuCC,EAAAA,KAAvC;AAA8CV,EAAAA;AAA9C,CAAD,KAAoE;AAClFD,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,cAAc,CAACU,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEN,CAACZ,cAAD,EAAiBU,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFM,CAAT;AAMA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIL,OAAO,KAAK,IAAZ,IAAoBC,OAApB,GACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAGA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAIGC,IAAI,CAACI,eAAL,IAAwBJ,IAAI,CAACD,OAAL,KAAiB,KAAzC,IAAkDC,IAAI,CAACK,IAAL,CAAUC,GAAV,KAAkBR,OAAO,CAACO,IAAR,CAAaC,GAAjF,IACC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,EASE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAER,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGA,OAAO,CAACS,UAAR,CAAmBC,MAAnB,GAA4B,CAA5B,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,OAAO,CAACS,UAAR,CAAmBE,GAAnB,CAAuBF,UAAU,IAChC,oBAAC,iBAAD;AACE,IAAA,GAAG,EAAEA,UAAU,CAACD,GADlB;AAEE,IAAA,UAAU,EAAEC,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADD,GAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAZJ,CAHF,EAmBE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGT,OAAO,CAACY,SAAR,CAAkBF,MAAlB,GAA2B,CAA3B,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,OAAO,CAACY,SAAR,CAAkBD,GAAlB,CAAsBC,SAAS,IAC9B,oBAAC,gBAAD;AACE,IAAA,GAAG,EAAEA,SAAS,CAACJ,GADjB;AAEE,IAAA,SAAS,EAAEI,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADD,GAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAZJ,CAnBF,EAmCGZ,OAAO,CAACa,cAAR,IACC,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEb,OAAO,CAACa,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCJ,CATF,CAJJ,CADF;AAyDD,CAhED;;AAmEAd,OAAO,CAACe,SAAR,GAAoB;AAClBd,EAAAA,OAAO,EAAEV,SAAS,CAACyB,MAAV,CAAiBC,UADR;AAElBd,EAAAA,IAAI,EAAEZ,SAAS,CAACyB,MAAV,CAAiBC,UAFL;AAGlBvB,EAAAA,cAAc,EAAEH,SAAS,CAAC2B,IAAV,CAAeD;AAHb,CAApB;;AAOA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCnB,EAAAA,OAAO,EAAEmB,KAAK,CAACnB,OADmB;AAElCE,EAAAA,IAAI,EAAEiB,KAAK,CAACjB;AAFsB,CAAZ,CAAxB;;AAKA,eAAed,OAAO,CAAC8B,eAAD,EAAkB;AACtCzB,EAAAA,cAAc,EAAEA;AADsB,CAAlB,CAAP,CAEZM,OAFY,CAAf","sourcesContent":["// Import React Library and Fragment component\nimport React, { Fragment } from 'react';\n\n// Import the connect function from react-redux library\nimport { connect } from 'react-redux';\n\n// Import our Spinner component\nimport Spinner from '../layouts/Spinner';\n\n// Import PropTypes from prop-types library\nimport PropTypes from 'prop-types'\n\n// Import the link component from the react-router-dom\nimport { Link } from 'react-router-dom';\n\n// Import useEffect from React library HOOKS!\nimport { useEffect } from 'react';\n\n// Import our getProfileById action creator\nimport { getProfileById } from '../../actions/profile';\n\n// Import our ProfileTop component\nimport ProfileTop from './ProfileTop';\n\n// Import our ProfileAbout component\nimport ProfileAbout from './ProfileAbout';\n\n// Import our ProfileExperience component\nimport ProfileExperience from './ProfileExperience';\n\n// Import our ProfileEducation component\nimport ProfileEducation from './ProfileEducation';\n\n// Import our ProfileGithub component\nimport ProfileGithub from './ProfileGithub';\n\n\nconst Profile = ({ profile: { profile, loading }, auth, match, getProfileById }) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n\n\n  return (\n    <Fragment>\n       {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to='/profiles' className='btn btn-light'>\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (\n            <Link to='/edit-profile' className='btn btn-dark'>\n              Edit Profile\n            </Link>\n          )}\n          <div className='profile-grid my-1'>\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className='profile-exp bg-white p-2'>\n              <h2 className='text-primary'>Experience</h2>\n              {profile.experience.length > 0 ? (\n                <Fragment>\n                  {profile.experience.map(experience => (\n                    <ProfileExperience\n                      key={experience._id}\n                      experience={experience}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No experience credentials</h4>\n              )}\n            </div>\n            \n            <div className='profile-edu bg-white p-2'>\n              <h2 className='text-primary'>Education</h2>\n              {profile.education.length > 0 ? (\n                <Fragment>\n                  {profile.education.map(education => (\n                    <ProfileEducation\n                      key={education._id}\n                      education={education}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No education credentials</h4>\n              )}\n            </div>\n            \n            {profile.githubusername && (\n              <ProfileGithub username={profile.githubusername} />\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\n\nProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  getProfileById: PropTypes.func.isRequired,\n};\n\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById: getProfileById,\n})(Profile);\n"]},"metadata":{},"sourceType":"module"}