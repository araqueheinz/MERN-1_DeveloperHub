{"ast":null,"code":"// Import axios library\nimport axios from 'axios'; // Import our action Types\n\nimport { GET_PROFILE, GET_PROFILES, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED, GET_REPOS } from '../actions/types'; // Import our setAlert action\n\nimport { setAlert } from './alert'; // GET / READ PROFILE\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // GET / READ ALL PROFILES\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // GET / READ PROFILE BY ID\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/user/\".concat(userId));\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // GET GITHUB REPOS\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/github/\".concat(username));\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // POST / CREATE PROFILE / EDIT\n\nexport const createProfile = (formData, // We want to redirect the user after we submit the form, so we use the history object to push to a different client side route.\nhistory, // Parameter to determine if it is a create or edit profile.\nedit = false) => async dispatch => {\n  try {\n    // Make the api call\n    const res = await axios.post('/api/profile/', formData, {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      // Redirect\n      history.push('/dashboard');\n    }\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(element => dispatch(setAlert(element.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // PUT / ADD EXPERIENCE\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const res = await axios.put('/api/profile/experience', formData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // PUT / ADD EDUCATION\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const res = await axios.put('/api/profile/education', formData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // DELETE / EXPERIENCE\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/profile/experience/\".concat(id));\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // DELETE / EDUCATION\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/profile/education/\".concat(id));\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // DELETE / ACCOUNT & PROFILE\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\n    try {\n      await axios.delete('/api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your account has been deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/actions/profile.js"],"names":["axios","GET_PROFILE","GET_PROFILES","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","GET_REPOS","setAlert","getCurrentProfile","dispatch","res","get","type","payload","data","error","msg","response","statusText","status","getProfiles","err","getProfileById","userId","getGithubRepos","username","createProfile","formData","history","edit","post","headers","push","errors","forEach","element","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["// Import axios library\nimport axios from 'axios';\n\n// Import our action Types\nimport { GET_PROFILE, GET_PROFILES, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED, GET_REPOS } from '../actions/types';\n\n// Import our setAlert action\nimport { setAlert } from './alert';\n\n// GET / READ PROFILE\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: error.response.statusText, status: error.response.status }\n    });\n  }\n}\n\n// GET / READ ALL PROFILES\nexport const getProfiles = () => async dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await axios.get('/api/profile');\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// GET / READ PROFILE BY ID\nexport const getProfileById = (userId) => async dispatch => {\n\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// GET GITHUB REPOS\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// POST / CREATE PROFILE / EDIT\nexport const createProfile = (\n  formData,\n  // We want to redirect the user after we submit the form, so we use the history object to push to a different client side route.\n  history,\n  // Parameter to determine if it is a create or edit profile.\n  edit = false,\n) => async dispatch => {\n  try {\n    // Make the api call\n    const res = await axios.post('/api/profile/', formData, { headers: { 'Content-type': 'application/json' } })\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n    \n    if (!edit) {\n      // Redirect\n      history.push('/dashboard');\n    }\n\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if(errors) {\n      errors.forEach(element => dispatch(setAlert(element.msg, 'danger')));\n    } \n    \n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: error.response.statusText, status: error.response.status }\n    });\n  }\n\n}\n\n// PUT / ADD EXPERIENCE\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n\n    const res = await axios.put('/api/profile/experience', formData, { headers: { 'Content-Type': 'application/json'} });\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Experience Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: error.response.statusText, status: error.response.status }\n    });\n  }\n};\n\n// PUT / ADD EDUCATION\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n\n    const res = await axios.put('/api/profile/education', formData, { headers: { 'Content-Type': 'application/json'} });\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Education Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: error.response.statusText, status: error.response.status }\n    });\n  }\n};\n\n\n// DELETE / EXPERIENCE\nexport const deleteExperience = (id) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: error.response.statusText, status: error.response.status }\n    });\n  }\n};\n\n// DELETE / EDUCATION\nexport const deleteEducation = (id) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: error.response.statusText, status: error.response.status }\n    });\n  }\n};\n\n// DELETE / ACCOUNT & PROFILE\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\n    try {\n      await axios.delete('/api/profile');\n\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n\n      dispatch(setAlert('Your account has been deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}