{"ast":null,"code":"var _jsxFileName = \"/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/post/Post.js\";\n// Import React Library and Fragment component\nimport React, { Fragment } from 'react'; // Import the connect function from react-redux library\n\nimport { connect } from 'react-redux'; // Import PropTypes from prop-types library\n\nimport PropTypes from 'prop-types'; // Import useEffect from React library HOOKS!\n\nimport { useEffect } from 'react'; // Import our Spinner component\n\nimport Spinner from '../layouts/Spinner'; // Import the link component from the react-router-dom\n\nimport { Link } from 'react-router-dom'; // Import our getPost action creator\n\nimport { getPost } from '../../actions/post'; // Import our PostItem component\n\nimport PostItem from '../posts/PostItem'; // Import out CommentForm component\n\nimport CommentForm from './CommentForm'; // Import our CommentItem component\n\nimport CommentItem from './CommentItem';\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost, match.params.id]);\n  console.log(post.post);\n  return loading || post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Back To Posts\"), React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, post.comments.map(comment => React.createElement(CommentItem, {\n    key: comment._id,\n    comment: comment,\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost: getPost\n})(Post);","map":{"version":3,"sources":["/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/post/Post.js"],"names":["React","Fragment","connect","PropTypes","useEffect","Spinner","Link","getPost","PostItem","CommentForm","CommentItem","Post","post","loading","match","params","id","console","log","_id","comments","map","comment","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,oBAAxB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,mBAArB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEJ,EAAAA,OAAF;AAAWK,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAjB;AAAoCC,EAAAA;AAApC,CAAD,KAAiD;AAC5DV,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,OAAO,CAACO,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACD,GAFQ,EAEN,CAACT,OAAD,EAAUO,KAAK,CAACC,MAAN,CAAaC,EAAvB,CAFM,CAAT;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACA,IAAjB;AAEA,SAAOC,OAAO,IAAID,IAAI,KAAK,IAApB,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFH,EAME,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,IAAI,CAACO,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGP,IAAI,CAACQ,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IACxB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACH,GAA1B;AAA+B,IAAA,OAAO,EAAEG,OAAxC;AAAiD,IAAA,MAAM,EAAEV,IAAI,CAACO,GAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CARF,CAHF;AAoBD,CA3BD;;AA6BAR,IAAI,CAACY,SAAL,GAAiB;AACfhB,EAAAA,OAAO,EAAEJ,SAAS,CAACqB,IAAV,CAAeC,UADT;AAEfb,EAAAA,IAAI,EAAET,SAAS,CAACuB,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClChB,EAAAA,IAAI,EAAEgB,KAAK,CAAChB;AADsB,CAAZ,CAAxB;;AAIA,eAAeV,OAAO,CAACyB,eAAD,EAAkB;AACtCpB,EAAAA,OAAO,EAAEA;AAD6B,CAAlB,CAAP,CAEZI,IAFY,CAAf","sourcesContent":["// Import React Library and Fragment component\nimport React, { Fragment } from 'react';\n\n// Import the connect function from react-redux library\nimport { connect } from 'react-redux';\n\n// Import PropTypes from prop-types library\nimport PropTypes from 'prop-types';\n\n// Import useEffect from React library HOOKS!\nimport { useEffect } from 'react';\n\n// Import our Spinner component\nimport Spinner from '../layouts/Spinner';\n\n// Import the link component from the react-router-dom\nimport { Link } from 'react-router-dom';\n\n// Import our getPost action creator\nimport { getPost } from '../../actions/post';\n\n// Import our PostItem component\nimport PostItem from '../posts/PostItem';\n\n// Import out CommentForm component\nimport CommentForm from './CommentForm';\n\n// Import our CommentItem component\nimport CommentItem from './CommentItem';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id)\n  }, [getPost, match.params.id]);\n\n  console.log(post.post)\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n\n       <Link to='/posts' className='btn'>\n        Back To Posts\n      </Link>\n\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className='comments'>\n        \n        {post.comments.map(comment => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n\n    </Fragment>\n  );\n}\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n})\n\nexport default connect(mapStateToProps, {\n  getPost: getPost,\n})(Post);\n"]},"metadata":{},"sourceType":"module"}