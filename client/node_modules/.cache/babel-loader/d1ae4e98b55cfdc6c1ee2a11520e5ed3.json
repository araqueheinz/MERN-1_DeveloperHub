{"ast":null,"code":"import _defineProperty from \"/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/profile-forms/AddExperience.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Import React Library and Fragment component\nimport React, { Fragment } from 'react'; // Import and useState from React library HOOKS!\n\nimport { useState } from 'react'; // Import the link component from the react-router-dom\n\nimport { Link } from 'react-router-dom'; // Import the withRouter function from the react-router-dom\n\nimport { withRouter } from 'react-router-dom'; // Import the connect function from react-redux library\n\nimport { connect } from 'react-redux'; // Import PropTypes from prop-types library\n\nimport PropTypes from 'prop-types'; // Import our addExperience action creator\n\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({\n  addExperience,\n  history\n}) => {\n  const _useState = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1]; // Check if it is a current job then don't show date frame\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        toDateDisabled = _useState4[0],\n        toggleDisabled = _useState4[1];\n\n  const company = formData.company,\n        title = formData.title,\n        location = formData.location,\n        from = formData.from,\n        to = formData.to,\n        current = formData.current,\n        description = formData.description;\n\n  const onChange = event => {\n    setFormData(_objectSpread({}, formData, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    addExperience(formData, history);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Add Experience\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-code-branch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), \" Add any developer/programming positions that you have had in the past.\"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"* = required field\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: event => {\n      onSubmit(event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"* Job Title\",\n    name: \"title\",\n    value: title,\n    onChange: event => onChange(event),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"* Company\",\n    name: \"company\",\n    value: company,\n    onChange: event => onChange(event),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Location\",\n    name: \"location\",\n    value: location,\n    onChange: event => onChange(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"From Date\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"from\",\n    value: from,\n    onChange: event => onChange(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"current\",\n    checked: current,\n    value: current,\n    onChange: () => {\n      setFormData(_objectSpread({}, formData, {\n        current: !current\n      }));\n      toggleDisabled(!toDateDisabled);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), \" \", ' ', \" Current Job\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"To Date\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"to\",\n    value: to,\n    onChange: e => onChange(e),\n    disabled: toDateDisabled ? 'disabled' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    name: \"description\",\n    cols: \"30\",\n    rows: \"5\",\n    placeholder: \"Job Description\",\n    value: description,\n    onChange: event => onChange(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Go Back\")));\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addExperience: addExperience\n})(withRouter(AddExperience));","map":{"version":3,"sources":["/Users/heinzaraque/Documents/Web&Udemy-Courses/7 - Brad Traversy/MERN Stack Front To Back/client/src/components/profile-forms/AddExperience.js"],"names":["React","Fragment","useState","Link","withRouter","connect","PropTypes","addExperience","AddExperience","history","company","title","location","from","to","current","description","formData","setFormData","toDateDisabled","toggleDisabled","onChange","event","target","name","value","onSubmit","preventDefault","e","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["// Import React Library and Fragment component\nimport React, { Fragment } from 'react';\n\n// Import and useState from React library HOOKS!\nimport { useState } from 'react';\n\n// Import the link component from the react-router-dom\nimport { Link } from 'react-router-dom';\n\n// Import the withRouter function from the react-router-dom\nimport { withRouter } from 'react-router-dom';\n\n// Import the connect function from react-redux library\nimport { connect } from 'react-redux';\n\n// Import PropTypes from prop-types library\nimport PropTypes from 'prop-types'\n\n// Import our addExperience action creator\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  });\n\n// Check if it is a current job then don't show date frame\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const { company, title, location, from, to, current, description } = formData;\n\n  const onChange = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault(); \n    addExperience(formData, history);\n  }\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add Experience</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch'/> Add any developer/programming positions that you have had in the past.\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={(event) => { onSubmit(event) }}>\n\n        <div className='form-group'>\n          <input type='text' placeholder='* Job Title' name='title' value={title} onChange={(event) => onChange(event)} required />\n        </div>\n\n        <div className='form-group'>\n          <input type='text' placeholder='* Company' name='company' value={company} onChange={(event) => onChange(event)}  required />\n        </div>\n\n        <div className='form-group'>\n          <input type='text' placeholder='Location' name='location' value={location} onChange={(event) => onChange(event)} />\n        </div>\n\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input type='date' name='from' value={from} onChange={(event) => onChange(event)} />\n        </div>\n\n        {/* Check if it is a current job then don't show date frame */}\n        <div className='form-group'>\n          <p>\n            <input type='checkbox' name='current' checked={current} value={current}  onChange={() => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n            /> {' '} Current Job\n          </p>\n        </div>\n\n        {/* Check if it is a current job then don't show date frame */}\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input type='date' name='to' value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''} />\n        </div>\n        \n        <div className='form-group'>\n          <textarea name='description' cols='30' rows='5' placeholder='Job Description' value={description} onChange={(event) => onChange(event)} />\n        </div>\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { \n  addExperience: addExperience,\n\n})(withRouter(AddExperience));"]},"metadata":{},"sourceType":"module"}